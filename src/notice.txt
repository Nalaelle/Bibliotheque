Challenge : G√©rer une biblioth√®que en Java !

Votre mission :
Vous avez √©t√© engag√© pour aider une petite biblioth√®que locale √† passer de la gestion manuelle de ses livres √† une solution informatis√©e. L'√©quipe de la biblioth√®que a entendu parler de vos comp√©tences en programmation Java et vous a confi√© cette t√¢che.

La biblioth√®que souhaite une application qui permette de :

G√©rer une collection de livres, chacun avec un titre, un auteur et une ann√©e de publication.
Ajouter un livre √† la collection.
Retirer un livre de la collection.
Afficher la liste compl√®te des livres.
Rechercher des livres par auteur et afficher les r√©sultats.
Pour r√©aliser ce d√©fi, suivez les √©tapes ci-dessous :

Analysez les besoins de la biblioth√®que et identifiez les classes et m√©thodes n√©cessaires.

Cr√©ez une structure de classes qui permet de g√©rer les livres en utilisant l'h√©ritage et le polymorphisme.
a. Cr√©ez une classe abstraite Book avec des sous-classes sp√©cifiques comme Novel, NonFiction, etc.
b. Impl√©mentez des m√©thodes appropri√©es pour ajouter, retirer et afficher des livres.
c. Pensez √† utiliser des constructeurs et des accesseurs (getters et setters) pour chaque classe.

Utilisez une interface Enum pour g√©rer les genres de livres (fiction, non-fiction, etc.).

Utilisez une structure de donn√©es Map pour stocker les livres dans la biblioth√®que.

Impl√©mentez la m√©thode toString dans les classes pour afficher les informations sur les livres.

Assurez-vous d'utiliser des conventions de nommage appropri√©es et d'ajouter de la documentation (Javadoc) l√† o√π cela est n√©cessaire.

Fournissez le code de l'application pour la biblioth√®que !

Livrable :

Un lien vers votre repository GitHub contenant le code de l'application.
üí° Besoin d'aide ?

Utilisez des classes abstraites et des sous-classes pour g√©rer diff√©rentes cat√©gories de livres.
Lisez la documentation officielle sur les Enum pour g√©rer les genres de livres.
Revoyez les chapitres sur l'h√©ritage et le polymorphisme dans votre cours Java.
Pensez √† structurer votre code de mani√®re logique et modulaire.
Amusez-vous √† cr√©er cette application de gestion de biblioth√®que en Java !